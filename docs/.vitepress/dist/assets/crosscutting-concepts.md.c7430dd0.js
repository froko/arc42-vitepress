import{_ as e,c as t,o as n,d as i}from"./app.d91ec24d.js";const c="/assets/08-Crosscutting-Concepts-Structure-EN.2e4fc831.png",f=JSON.parse('{"title":"Cross-cutting Concepts","description":"","frontmatter":{},"headers":[{"level":2,"title":"<Concept 1>","slug":"concept-1","link":"#concept-1","children":[]},{"level":2,"title":"<Concept 2>","slug":"concept-2","link":"#concept-2","children":[]},{"level":2,"title":"<Concept n>","slug":"concept-n","link":"#concept-n","children":[]}],"relativePath":"crosscutting-concepts.md"}'),o={name:"crosscutting-concepts.md"},s=i('<h1 id="cross-cutting-concepts" tabindex="-1">Cross-cutting Concepts <a class="header-anchor" href="#cross-cutting-concepts" aria-hidden="true">#</a></h1><p><strong>Content.</strong></p><p>This section describes overall, principal regulations and solution ideas that are relevant in multiple parts (= cross-cutting) of your system. Such concepts are often related to multiple building blocks. They can include many different topics, such as</p><ul><li><p>domain models</p></li><li><p>architecture patterns or design patterns</p></li><li><p>rules for using specific technology</p></li><li><p>principal, often technical decisions of overall decisions</p></li><li><p>implementation rules</p></li></ul><p><strong>Motivation.</strong></p><p>Concepts form the basis for <em>conceptual integrity</em> (consistency, homogeneity) of the architecture. Thus, they are an important contribution to achieve inner qualities of your system.</p><p>Some of these concepts cannot be assigned to individual building blocks (e.g. security or safety). This is the place in the template that we provided for a cohesive specification of such concepts.</p><p><strong>Form.</strong></p><p>The form can be varied:</p><ul><li><p>concept papers with any kind of structure</p></li><li><p>cross-cutting model excerpts or scenarios using notations of the architecture views</p></li><li><p>sample implementations, especially for technical concepts</p></li><li><p>reference to typical usage of standard frameworks (e.g. using Hibernate for object/relational mapping)</p></li></ul><p><strong>Structure.</strong></p><p>A potential (but not mandatory) structure for this section could be:</p><ul><li><p>Domain concepts</p></li><li><p>User Experience concepts (UX)</p></li><li><p>Safety and security concepts</p></li><li><p>Architecture and design patterns</p></li><li><p>&quot;Under-the-hood&quot;</p></li><li><p>development concepts</p></li><li><p>operational concepts</p></li></ul><p>Note: it might be difficult to assign individual concepts to one specific topic on this list.</p><p><img src="'+c+'" alt="Possible topics for crosscutting concepts"></p><h2 id="concept-1" tabindex="-1"><em>&lt;Concept 1&gt;</em> <a class="header-anchor" href="#concept-1" aria-hidden="true">#</a></h2><p><em>&lt;explanation&gt;</em></p><h2 id="concept-2" tabindex="-1"><em>&lt;Concept 2&gt;</em> <a class="header-anchor" href="#concept-2" aria-hidden="true">#</a></h2><p><em>&lt;explanation&gt;</em></p><p>\u2026</p><h2 id="concept-n" tabindex="-1"><em>&lt;Concept n&gt;</em> <a class="header-anchor" href="#concept-n" aria-hidden="true">#</a></h2><p><em>&lt;explanation&gt;</em></p>',22),p=[s];function r(a,l,u,d,h,m){return n(),t("div",null,p)}const _=e(o,[["render",r]]);export{f as __pageData,_ as default};
